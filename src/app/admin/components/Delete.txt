'use client'

import { useState } from 'react';
import axios from 'axios'; // Importa axios para realizar solicitudes HTTP
import { IProducto } from '@/interfaces/IProductos';

interface Props {
  productos: IProducto[];
}


export const AdminTable = ({ productos }: Props) => {
  const [deletedProduct, setDeletedProduct] = useState<string | null>(null);
  const [showForm, setShowForm] = useState(false); // Estado para controlar la visibilidad del formulario

  // Función para manejar el evento de clic en el botón "Borrar"
  const handleDelete = async (matricula: string) => {
    try {
      // Realiza una solicitud DELETE a tu API Nest para eliminar la moto
      await axios.delete(http://213.136.94.185:3001/api/motos/${matricula});
      // Actualiza el estado si la solicitud es exitosa
      setDeletedProduct(matricula);
      // Recarga la página automáticamente después de eliminar
      window.location.reload();
    } catch (error) {
      console.error('Error al borrar la moto:', error);
    }
  };

  // Función para mostrar una confirmación antes de borrar
  const confirmDelete = (matricula: string) => {
    if (window.confirm('¿Estás seguro de que quieres borrar este producto?')) {
      handleDelete(matricula);
    }
  };

  // Función para mostrar el formulario para agregar un nuevo producto
  const showAddForm = () => {
    setShowForm(true);
  };

  return (
    <>
      <div className="relative overflow-x-auto shadow-md sm:rounded-lg">
        <table className="w-full text-sm text-left rtl:text-right text-gray-500 dark:text-gray-400">
          <thead className="text-xs text-gray-700 uppercase bg-gray-50 dark:bg-gray-700 dark:text-gray-400">
            <tr>
              <th scope="col" className="px-16 py-3">
                Imagen
              </th>
              <th scope="col" className="px-6 py-3">
                Producto
              </th>
              <th scope="col" className="px-6 py-3">
                Marca
              </th>
              <th scope="col" className="px-6 py-3">
                Precio
              </th>
              <th scope="col" className="px-6 py-3">
                <button type="button" className="button-circle" onClick={showAddForm}> {/* Agrega onClick para mostrar el formulario */}
                  <svg className="h-3.5 w-3.5" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg" aria-hidden="true">
                    <path clip-rule="evenodd" fill-rule="evenodd" d="M10 3a1 1 0 011 1v5h5a1 1 0 110 2h-5v5a1 1 0 11-2 0v-5H4a1 1 0 110-2h5V4a1 1 0 011-1z" />
                  </svg>
                </button>
              </th>
            </tr>
          </thead>
          {productos.map((producto) => (
            <tbody key={producto.matricula}>
              <tr className="bg-white border-b dark:bg-gray-800 dark:border-gray-700 hover:bg-gray-50 dark:hover:bg-gray-600">
                <td className="p-4">
                  <img src={producto.foto} className="w-16 md:w-32 max-w-full max-h-full" alt="Producto" />
                </td>
                <td className="px-6 py-4 font-semibold text-gray-900 dark:text-white">
                  {producto.marca}
                </td>
                <td className="px-6 py-4 font-semibold text-gray-900 dark:text-white">
                  {producto.modelo}
                </td>
                <td className="px-6 py-4 font-semibold text-gray-900 dark:text-white">
                  {producto.precio}€
                </td>
                <td className="px-6 py-4">
                  {/* Botón "Borrar" que llama a la función confirmDelete */}
                  <button type="button" onClick={() => confirmDelete(producto.matricula)} className="text-white bg-gradient-to-r from-red-400 via-red-500 to-red-600 hover:bg-gradient-to-br focus:ring-4 focus:outline-none focus:ring-red-300 dark:focus:ring-red-800 font-medium rounded-lg text-sm px-5 py-2.5 text-center me-2 mb-2">
                    Borrar
                  </button>
                </td>
              </tr>
            </tbody>
          ))}
        </table>
      </div>
      {showForm && (
        <div className="fixed inset-0 bg-gray-800 bg-opacity-75 flex justify-center items-center">
          <div className="bg-white rounded-lg p-6 shadow-md">
            {/* Aquí colocas tu formulario para agregar un nuevo producto */}
            {/* Ejemplo */}
            <div className="fixed inset-0 bg-gray-800 bg-opacity-75 flex justify-center items-center">
  <div className='formularioadd'>
    <h2 className="text-lg font-semibold mb-4">Agregar Nuevo Producto</h2>
    <form>
      <div className=" formuflex grid grid-cols-1 gap-4">
        <div>
          <label htmlFor="matricula" className="block text-gray-700 text-sm font-bold mb-2">Matrícula:</label>
          <input type="text" id="matricula" name="matricula" className="input-field" />
        </div>
        <div>
          <label htmlFor="marca" className="block text-gray-700 text-sm font-bold mb-2">Marca:</label>
          <input type="text" id="marca" name="marca" className="input-field" />
        </div>
        <div>
          <label htmlFor="modelo" className="block text-gray-700 text-sm font-bold mb-2">Modelo:</label>
          <input type="text" id="modelo" name="modelo" className="input-field" />
        </div>
        <div>
          <label htmlFor="foto" className="block text-gray-700 text-sm font-bold mb-2">URL de la foto:</label>
          <input type="text" id="foto" name="foto" className="input-field" />
        </div>
        <div>
          <label htmlFor="cilindrada" className="block text-gray-700 text-sm font-bold mb-2">Cilindrada:</label>
          <input type="number" id="cilindrada" name="cilindrada" className="input-field" />
        </div>
        <div>
          <label htmlFor="peso" className="block text-gray-700 text-sm font-bold mb-2">Peso:</label>
          <input type="number" id="peso" name="peso" className="input-field" />
        </div>
        <div>
          <label htmlFor="precio" className="block text-gray-700 text-sm font-bold mb-2">Precio:</label>
          <input type="number" id="precio" name="precio" className="input-field" />
        </div>
        <div>
          <label htmlFor="dni_propietario" className="block text-gray-700 text-sm font-bold mb-2">DNI del propietario:</label>
          <input type="text" id="dni_propietario" name="dni_propietario" className="input-field" />
        </div>
        <div>
          <label htmlFor="catid" className="block text-gray-700 text-sm font-bold mb-2">Categoría ID:</label>
          <input type="text" id="catid" name="catid" className="input-field" />
        </div>
      </div>
      <div className="flex justify-end mt-4">
        <button type="submit" className="bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline">Guardar</button>
      </div>
    </form>
  </div>
</div>


          </div>
        </div>
      )}
    </>
  );
};